// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mail.proto

/*
Package glofox_mailer is a generated protocol buffer package.

It is generated from these files:
	proto/mail.proto

It has these top-level messages:
	Email
	Content
	Envelope
*/
package glofox_mailer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Email struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *Email) Reset()                    { *m = Email{} }
func (m *Email) String() string            { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()               {}
func (*Email) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Email) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Email) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Content struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Content) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Content) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Envelope struct {
	Subject string   `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
	From    *Email   `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	To      []*Email `protobuf:"bytes,3,rep,name=to" json:"to,omitempty"`
	Content *Content `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *Envelope) Reset()                    { *m = Envelope{} }
func (m *Envelope) String() string            { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()               {}
func (*Envelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Envelope) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Envelope) GetFrom() *Email {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Envelope) GetTo() []*Email {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Envelope) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*Email)(nil), "glofox_mailer.Email")
	proto.RegisterType((*Content)(nil), "glofox_mailer.Content")
	proto.RegisterType((*Envelope)(nil), "glofox_mailer.Envelope")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MailingService service

type MailingServiceClient interface {
	Send(ctx context.Context, in *Envelope, opts ...grpc.CallOption) (*Envelope, error)
}

type mailingServiceClient struct {
	cc *grpc.ClientConn
}

func NewMailingServiceClient(cc *grpc.ClientConn) MailingServiceClient {
	return &mailingServiceClient{cc}
}

func (c *mailingServiceClient) Send(ctx context.Context, in *Envelope, opts ...grpc.CallOption) (*Envelope, error) {
	out := new(Envelope)
	err := grpc.Invoke(ctx, "/glofox_mailer.MailingService/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MailingService service

type MailingServiceServer interface {
	Send(context.Context, *Envelope) (*Envelope, error)
}

func RegisterMailingServiceServer(s *grpc.Server, srv MailingServiceServer) {
	s.RegisterService(&_MailingService_serviceDesc, srv)
}

func _MailingService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Envelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailingServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/glofox_mailer.MailingService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailingServiceServer).Send(ctx, req.(*Envelope))
	}
	return interceptor(ctx, in, info, handler)
}

var _MailingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glofox_mailer.MailingService",
	HandlerType: (*MailingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _MailingService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mail.proto",
}

func init() { proto.RegisterFile("proto/mail.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x9a, 0x1a, 0x1d, 0x51, 0x64, 0x28, 0xba, 0x78, 0x2a, 0xc1, 0x43, 0x4f, 0x51,
	0x5a, 0xbc, 0x78, 0x95, 0xde, 0xf4, 0x92, 0xfe, 0x00, 0xd9, 0x26, 0xd3, 0x12, 0xd9, 0xec, 0x84,
	0xcd, 0x36, 0xe8, 0x1f, 0xf2, 0x77, 0x4a, 0xa6, 0x89, 0xd0, 0x42, 0x6f, 0xef, 0x4d, 0xde, 0x37,
	0x79, 0xb3, 0x70, 0x5b, 0x3b, 0xf6, 0xfc, 0x54, 0xe9, 0xd2, 0xa4, 0x22, 0xf1, 0x7a, 0x6b, 0x78,
	0xc3, 0xdf, 0x9f, 0xdd, 0x88, 0x5c, 0xf2, 0x02, 0xe3, 0x65, 0x27, 0x11, 0x21, 0xb2, 0xba, 0x22,
	0x15, 0x4c, 0x83, 0xd9, 0x65, 0x26, 0x1a, 0x15, 0xc4, 0xba, 0x28, 0x1c, 0x35, 0x8d, 0x0a, 0x65,
	0x3c, 0xd8, 0x64, 0x01, 0xf1, 0x1b, 0x5b, 0x4f, 0xd6, 0x77, 0xa0, 0xff, 0xa9, 0xff, 0xc1, 0x4e,
	0xe3, 0x04, 0xc6, 0xad, 0x36, 0x3b, 0xea, 0xb1, 0xbd, 0x49, 0x7e, 0x03, 0xb8, 0x58, 0xda, 0x96,
	0x0c, 0xd7, 0xb2, 0xbb, 0xd9, 0xad, 0xbf, 0x28, 0xf7, 0x3d, 0x39, 0x58, 0x9c, 0x41, 0xb4, 0x71,
	0x5c, 0x09, 0x7b, 0x35, 0x9f, 0xa4, 0x07, 0x85, 0x53, 0x69, 0x9b, 0x49, 0x02, 0x1f, 0x21, 0xf4,
	0xac, 0x46, 0xd3, 0xd1, 0xc9, 0x5c, 0xe8, 0x19, 0x9f, 0x21, 0xce, 0xf7, 0x5d, 0x55, 0x24, 0x2b,
	0xef, 0x8e, 0xa2, 0xfd, 0x25, 0xd9, 0x10, 0x9b, 0xbf, 0xc3, 0xcd, 0x87, 0x2e, 0x4d, 0x69, 0xb7,
	0x2b, 0x72, 0x6d, 0x99, 0x13, 0xbe, 0x42, 0xb4, 0x22, 0x5b, 0xe0, 0xfd, 0xf1, 0x5f, 0xfa, 0x73,
	0x1e, 0x4e, 0x7d, 0x48, 0xce, 0xd6, 0xe7, 0xf2, 0xf0, 0x8b, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x27, 0xc0, 0x73, 0x1b, 0x8c, 0x01, 0x00, 0x00,
}
